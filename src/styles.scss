// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;
@use 'sass:map';
@use './theme-colors.scss' as theme;


//  html {
//    @include mat.theme((
//      color: (
//        primary: theme.$primary-palette,
//        tertiary: theme.$tertiary-palette,
//      ),
//      typography: Roboto,
//      density: 0,
//    ));
//  }

body {
     color-scheme: light;
     background-color: var(--mat-sys-surface);
     color: var(--mat-sys-on-surface);
     font: var(--mat-sys-body-medium);

  margin: 0;
   }
/* You can add global styles to this file, and also import other style files */
html, body { height: 100%; }
body { margin: 0; font-family: 'Poppins, Nunito, sans-serif'; }

.home {
     display: grid;
     align-items: center;
     justify-content: center;
     min-height: 100vh;
     grid-template-rows: auto 1fr auto;
     margin: 0 auto;
}

// $breakpoints: (
//   xs: 0px,      // Mobile
//   sm: 600px,    // Tablet vertical
//   md: 905px,    // Tablet horizontal
//   lg: 1240px,   // Desktop normal
//   xl: 1440px,   // Desktop grande
//   xxl: 1920px   // Pantallas muy grandes
// );

// // Mixin para facilitar uso
// @mixin respond-to($size) {
//   $value: map-get($breakpoints, $size);
//   @if $value {
//     @media (min-width: #{$value}) {
//       @content;
//     }
//   } @else {
//     @warn "El breakpoint `#{$size}` no existe en el mapa.";
//   }
// }
